
import React, { useState } from 'react'
import { Folder, RefreshCw, ChevronDown } from '../icons'
type Vault = { id:string; name:string; path:string; color:string; repoUrl?:string; branch?:string; intervalMin?:number; intervalSec?:number; lastSync?:string; onlyIfChanges?:boolean; include?:string; exclude?:string; notifyOS?:boolean; notifyOverlay?:boolean; overlayAlpha?:number; overlayScale?:number; commitTemplate?:string }
export default function VaultSettings({ value, onChange, onPick, onSync }:{ value:Vault, onChange:(v:Vault)=>void, onPick:()=>void, onSync:()=>void }){
  function set(p:Partial<Vault>){ onChange({ ...value, ...p }) }
  const [showFolder, setShowFolder] = useState(true)
  const [showAdvanced, setShowAdvanced] = useState(false)
  const interval = value.intervalSec ?? (value.intervalMin ? value.intervalMin * 60 : 600)
  const alpha = value.overlayAlpha ?? 0.55
  const scale = value.overlayScale ?? 0.92
  return (<div className="max-w-4xl mx-auto h-full overflow-hidden">
    <div className="mb-3 flex items-center justify-between">
      <input className="text-xl bg-transparent outline-none border-b border-obs-border/60 focus:border-obs-accent/80 px-2 pb-1 rounded" value={value.name} onChange={e=>set({name:e.target.value})}/>
      <button onClick={onSync} className="icon flex items-center gap-2"><RefreshCw className="w-4 h-4"/> <span className="text-sm">Sync now</span></button>
    </div>

    <div className="rounded-xl border border-obs-border/60 p-3 space-y-3 bg-obs-panel/60 h-[calc(100%-56px)] thinScroll">
      <div className="grid md:grid-cols-2 gap-3">
        <div className="space-y-1">
          <label className="text-slate-300 text-sm">Git remote URL</label>
          <input className="w-full bg-transparent border border-obs-border/60 rounded-xl px-3 py-2 outline-none focus:border-obs-accent/80" value={value.repoUrl||''} onChange={e=>set({repoUrl:e.target.value})} placeholder="git@github.com:user/repo.git or https://github.com/user/repo.git"/>
        </div>
        <div className="space-y-1">
          <label className="text-slate-300 text-sm">Branch</label>
          <input className="w-full bg-transparent border border-obs-border/60 rounded-xl px-3 py-2 outline-none focus:border-obs-accent/80" value={value.branch||'main'} onChange={e=>set({branch:e.target.value})}/>
        </div>
        <div className="space-y-1">
          <label className="text-slate-300 text-sm">Interval (seconds)</label>
          <input type="number" min={30} step={5} className="w-full bg-transparent border border-obs-border/60 rounded-xl px-3 py-2 outline-none focus:border-obs-accent/80" value={interval} onChange={e=>set({intervalSec: Math.max(30, Number(e.target.value)||30)})}/>
        </div>
        <div className="space-y-1">
          <label className="text-slate-300 text-sm">Commit message</label>
          <input className="w-full bg-transparent border border-obs-border/60 rounded-xl px-3 py-2 outline-none focus:border-obs-accent/80" value={value.commitTemplate||''} onChange={e=>set({commitTemplate:e.target.value})} placeholder="Use {count} and {date} placeholders"/>
        </div>
      </div>

      <div className="section">
        <div className="flex items-center justify-between">
          <div className="text-slate-300 text-sm">Vault folder</div>
          <button onClick={()=>setShowFolder(s=>!s)} className="icon flex items-center gap-2"><ChevronDown className={`w-4 h-4 transition-transform ${showFolder?'rotate-0':'-rotate-90'}`}/> <span className="text-xs">{showFolder?'Hide':'Show'}</span></button>
        </div>
        <div className={`grid transition-all duration-300 ease-out ${showFolder ? 'grid-rows-[auto] opacity-100' : 'grid-rows-[0fr] opacity-0'}`}>
          <div className="overflow-hidden pt-2">
            <div className="grid grid-cols-[1fr_auto] gap-3 items-center">
              <input className="w-full bg-transparent border border-obs-border/60 rounded-xl px-3 py-2 outline-none focus:border-obs-accent/80" value={value.path} onChange={e=>set({path:e.target.value})} placeholder="Pick your Obsidian vault folder"/>
              <button onClick={onPick} className="icon flex items-center gap-2"><span className="text-sm">Browse</span></button>
            </div>
          </div>
        </div>
      </div>

      <div className="grid md:grid-cols-2 gap-3">
        <label className="inline-flex items-center gap-2 text-sm"><input type="checkbox" className="switch" checked={!!value.onlyIfChanges} onChange={e=>set({onlyIfChanges:e.target.checked})}/> only commit when there are changes</label>
        <label className="inline-flex items-center gap-2 text-sm"><input type="checkbox" className="switch" checked={value.notifyOverlay !== false} onChange={e=>set({notifyOverlay:e.target.checked})}/> screen overlay toast</label>
        <label className="inline-flex items-center gap-2 text-sm"><input type="checkbox" className="switch" checked={!!value.notifyOS} onChange={e=>set({notifyOS:e.target.checked})}/> OS notification</label>
        <div className="text-right text-xs text-slate-400">Last sync: {value.lastSync ? new Date(value.lastSync).toLocaleString() : 'â€”'}</div>
      </div>

      <div className="grid md:grid-cols-2 gap-3">
        <div className="space-y-1">
          <label className="text-slate-300 text-sm">Overlay opacity</label>
          <input type="range" className="slider" min={0.3} max={1} step={0.05} value={alpha} onChange={e=>set({overlayAlpha: Number(e.target.value)})} className="w-full"/>
        </div>
        <div className="space-y-1">
          <label className="text-slate-300 text-sm">Overlay size</label>
          <input type="range" className="slider" min={0.8} max={1.3} step={0.05} value={scale} onChange={e=>set({overlayScale: Number(e.target.value)})} className="w-full"/>
        </div>
      </div>

      <div className="section">
        <button onClick={()=>setShowAdvanced(s=>!s)} className="icon flex items-center gap-2"><ChevronDown className={`w-4 h-4 transition-transform ${showAdvanced?'rotate-0':'-rotate-90'}`}/> <span className="text-xs">Advanced</span></button>
        <div className={`grid transition-all duration-300 ease-out ${showAdvanced ? 'grid-rows-[auto] opacity-100' : 'grid-rows-[0fr] opacity-0'}`}>
          <div className="overflow-hidden pt-2 space-y-2">
            <input className="w-full bg-transparent border border-obs-border/60 rounded-xl px-3 py-2 outline-none focus:border-obs-accent/80" value={value.include||''} onChange={e=>set({include:e.target.value})} placeholder="Include (glob, e.g. **/*.md)"/>
            <input className="w-full bg-transparent border border-obs-border/60 rounded-xl px-3 py-2 outline-none focus:border-obs-accent/80" value={value.exclude||''} onChange={e=>set({exclude:e.target.value})} placeholder="Exclude (glob, e.g. .obsidian/**)"/>
          </div>
        </div>
      </div>
    </div>
  </div>)
}

